name: Test Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  issues: write
  statuses: write

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test]

      - name: Run tests with coverage
        run: |
          pytest -v --cov=src/words2nums --cov-report=xml --cov-report=html --cov-fail-under=80

      - name: Upload coverage to smokeshow
        env:
          SMOKESHOW_AUTH_KEY: ${{ secrets.SMOKESHOW_AUTH_KEY }}
        id: smokeshow
        run: |
          pip install smokeshow
          COVERAGE_URL=$(smokeshow upload htmlcov 2>&1 | tail -n1)
          echo "COVERAGE_URL=$COVERAGE_URL" >> "$GITHUB_OUTPUT"
          
          # Extract coverage percentage from the HTML report
          COVERAGE=$(grep -o '<span class="pc_cov">.*%</span>' htmlcov/index.html | grep -o '[0-9]\+' | head -1)
          echo "COVERAGE=$COVERAGE" >> "$GITHUB_OUTPUT"

      - name: Create coverage status
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/github-script@v7
        env:
          COVERAGE_URL: ${{ steps.smokeshow.outputs.COVERAGE_URL }}
        with:
          script: |
            const script = require('./.github/scripts/create-coverage-status.js')
            await script({github, context, core})

      - name: Comment PR with coverage info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          COVERAGE_URL: ${{ steps.smokeshow.outputs.COVERAGE_URL }}
        with:
          script: |
            const script = require('./.github/scripts/comment-pr.js')
            await script({github, context, core})
